## List categories


> REQUEST

```shell
curl -X GET \
  <%= config[:endpoint] %>/media/metadata \
  -H 'Authorization: <%= config[:token] %>' \
  -H 'Content-Type: application/json' \
  -d '{
  }'
```

```ruby
require "uiza"

Uiza.authorization = "<%= config[:token] %>"

begin
  categories = Uiza::Category.list
  puts categories.first.id
  puts categories.first.name
rescue Uiza::Error::UizaError => e
  puts "description_link: #{e.description_link}"
  puts "code: #{e.code}"
  puts "message: #{e.message}"
rescue StandardError => e
  puts "message: #{e.message}"
end
```

```python
import uiza

from uiza.api_resources.category import Category
from uiza.exceptions import ServerException

uiza.authorization = "<%= config[:token] %>"

try:
  res, status_code = Category().list()

  print("res: ", res)
except ServerException as e:
  raise e
except Exception as e:
  raise e
```

```php
<?php
require __DIR__."/../vendor/autoload.php";

Uiza\Base::setAuthorization("<%= config[:token] %>");

try {
  $categories =  Uiza\Category::list();

  print_r($categories);
} catch(\Uiza\Exception\ErrorResponse $e) {
  print($e);
}
?>
```

```java
import java.util.*;
import com.google.gson.*;

import io.uiza.Uiza;
import io.uiza.exception.*;
import io.uiza.model.Category;
import io.uiza.model.Category.*;

public class Main {

  public static void main(String[] args) {
    Uiza.authorization = "<%= config[:token] %>";

    try {
      JsonArray response = Category.list();
      System.out.println(response);
    } catch (UizaException e) {
      System.out.println("Status is: " + e.getStatusCode());
      System.out.println("Message is: " + e.getMessage());
      System.out.println("Description link is: " + e.getDescriptionLink());
    } catch (Exception e) {
      System.out.println(e);
    }
  }
}
```

```javascript
const uiza = require('uiza');

uiza.authorization('<%= config[:token] %>');

uiza.category.list()
  .then((res) => {
    //Identifier of category list
  }).catch((err) => {
    //Error
  });
```

```go
import (
  "github.com/uizaio/api-wrapper-go"
  "github.com/uizaio/api-wrapper-go/category"
)

func init() {
  Uiza.Authorization = "<%= config[:token] %>"
}

params := &uiza.CategoryListParams{}
listData, err := category.List(params)
if err != nil {
  log.Printf("%v\n", err)
} else {
  log.Printf("%v\n", response)
}
```

```csharp
using System;
using Uiza.Net.Configuration;
using Uiza.Net.Enums;
using Uiza.Net.Parameters;
using Uiza.Net.Services;

UizaConfiguration.SetupUiza(new UizaConfigOptions
{
  Authorization = "<%= config[:token] %>"
});

try
{
  var result = UizaServices.Category.List();

  Console.WriteLine(string.Format("Success Get List Category, total record {0}", result.MetaData.result));
  Console.ReadLine();
}
catch (UizaException ex)
{
  Console.WriteLine(ex.Message);
  Console.ReadLine();
}
```

Returns a list of your categories. The categories are returned sorted by `orderNumber`, with the smallest `orderNumber` appearing first.

> RESPONSE

```json
{
  "data": [
      {
          "id": "f932aa79-852a-41f7-9adc-19935034f944",
          "name": "Playlist sample",
          "description": "Playlist desciption",
          "slug": "playlist-sample",
          "type": "playlist",
          "orderNumber": 3,
          "icon": "/example.com/image002.png",
          "status": 1,
          "createdAt": "2018-06-18T04:29:05.000Z",
          "updatedAt": "2018-06-18T04:29:05.000Z"
      },
      {
          "id": "ab54db88-0c8c-4928-b1be-1e7120ad2c39",
          "name": "Folder sample",
          "description": "Folder's description",
          "slug": "folder-sample",
          "type": "folder",
          "orderNumber": 1,
          "icon": "/example.com/icon.png",
          "status": 1,
          "createdAt": "2018-06-18T03:17:07.000Z",
          "updatedAt": "2018-06-18T03:17:07.000Z"
      }
  ],
  "metadata": {
      "total": 2,
      "result": 2,
      "page": 1,
      "limit": 20
  },
}
```

**HTTP Request**

<span class="get-button"> GET </span>
```<%= config[:endpoint] %>/media/metadata```

**RETURNS**

A dictionary with a data property that contains an array of up to limit categories. Each entry in the array is a separate category object. If no more categories are available, the resulting array will be empty. This request should never return an error.
