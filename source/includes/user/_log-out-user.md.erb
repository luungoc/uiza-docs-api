## Log Out

This API use to log out an user. After logged out, token will be removed.

> REQUEST

```shell
curl -X POST \
  '<%= config[:endpoint] %>/admin/user/logout' \
  -H 'Authorization: <%= config[:token] %>'
```

```ruby
require "uiza"

Uiza.authorization = "<%= config[:token] %>"

begin
  response = Uiza::User.logout
  puts response.message
rescue Uiza::Error::UizaError => e
  puts "description_link: #{e.description_link}"
  puts "code: #{e.code}"
  puts "message: #{e.message}"
rescue StandardError => e
  puts "message: #{e.message}"
end
```

```python
import uiza

from uiza.api_resources.user import User
from uiza.exceptions import ServerException

uiza.authorization = "<%= config[:app_id] %>"
uiza.app_id = "<%= config[:token] %>"

try:
  res, status_code = User().logout()

  print("res ", res)
except ServerException as e:
  raise e
except Exception as e:
  raise e
```

```php
<?
require __DIR__."/../vendor/autoload.php";

Uiza\Base::setAuthorization("<%= config[:token] %>");

try {
  Uiza\User::logOut();
} catch(\Uiza\Exception\ErrorResponse $e) {
  print($e);
}
?>
```

```java
import java.util.*;
import com.google.gson.*;

import io.uiza.Uiza;
import io.uiza.exception.*;
import io.uiza.model.User;
import io.uiza.model.User.*;

public class Main {

  public static void main(String[] args) {
    Uiza.authorization = "<%= config[:token] %>";

    try {
      JsonObject response = User.logout();
      System.out.println(response);
    } catch (UizaException e) {
      System.out.println("Status is: " + e.getStatusCode());
      System.out.println("Message is: " + e.getMessage());
      System.out.println("Description link is: " + e.getDescriptionLink());
    } catch (Exception e) {
      System.out.println(e);
    }
  }
}
```

```javascript
const uiza = require('uiza');

uiza.authorization('<%= config[:token] %>');

uiza.user.log_out()
  .then((res) => {
    // Identifier of task publish
  }).catch((err) => {
    //Error
  });
```

```go
import (
  uiza "github.com/uizaio/api-wrapper-go"
  "github.com/uizaio/api-wrapper-go/user"
)

func init() {
  Uiza.Authorization = "<%= config[:token] %>"
}

params := &uiza.UserIDParams{}
response, err := user.LogOut(params)
if err != nil {
  log.Printf("%v\n", err)
} else {
  log.Printf("%v\n", response)
}
```

```csharp
using System;
using Uiza.Net.Configuration;
using Uiza.Net.Enums;
using Uiza.Net.Parameters;
using Uiza.Net.Services;

UizaConfiguration.SetupUiza(new UizaConfigOptions
{
  Authorization = "<%= config[:token] %>"
});

try
{
  var result = UizaServices.User.Logout();
  Console.WriteLine("Logout Success");
  Console.ReadLine();
}
catch (UizaException ex)
{
  Console.WriteLine(ex.Message);
  Console.ReadLine();
}
```

> RESPONSE

```json
{
  "message": "Logout success"
}
```

**HTTP Request**

<span class="post-button"> POST </span>
```<%= config[:endpoint] %>/admin/user/logout```


**RETURNS**

A message indicating status of the logout request.
